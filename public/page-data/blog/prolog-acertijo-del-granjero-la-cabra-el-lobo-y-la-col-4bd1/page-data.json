{"componentChunkName":"component---src-templates-blog-js","path":"/blog/prolog-acertijo-del-granjero-la-cabra-el-lobo-y-la-col-4bd1","result":{"data":{"devArticles":{"article":{"tags":["prolog","riddle","logic"],"slug":"prolog-acertijo-del-granjero-la-cabra-el-lobo-y-la-col-4bd1","title":"Prolog: Acertijo del granjero, la cabra, el lobo y la col","cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--DTjvzIhl--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/3svmkfe76vp5ol816hoi.jpg","description":"En un blog anterior se resolvió,  el problema de razonamiento denominado  jarras de agua; con el leng...","published_at":"Mar 28 2020","edited_at":null,"positive_reactions_count":6,"comments_count":0,"body_html":"<p>En un <a href=\"https://quijosakaf.com/public/blog/acertijo-jarras-de-agua-en-prolog\">blog</a> anterior se resolvió,  el problema de razonamiento denominado  jarras de agua; con el lenguaje de programación <strong>Prolog</strong>, en este blog se sige con esa misma línea y  se explica sobre la resolución de un popular juego de lógica llamado el acertijo del granjero, el lobo, la cabra y la col (hay un <a href=\"https://www.youtube.com/watch?v=dQndQJeQ564\">capítulo</a> de los  <strong><em>simpsons</em></strong> donde Homero resuelve un acertijo similar, para aquellos curiosos); el cual menciona lo siguiente:</p>\n\n<p><em>\"Hace mucho tiempo un granjero fue al mercado y compró un lobo, una cabra y una col. Para volver a su casa tenía que cruzar un río. El granjero dispone de una barca para cruzar a la otra orilla, pero en la</em> <strong>barca solo caben él y una de sus compras</strong>. <em>Si el lobo se queda solo con la cabra se la come, si la cabra se queda sola con la col se la come. El reto del granjero era cruzar él mismo y dejar sus compras a la otra orilla del río, dejando cada compra intacta.\"</em>  ¿Cómo lo hizo?</p>\n\n<p>Como se mencionó en el blog anterior es necesario entender el problema, en este aspecto particular, basta con la descripción y el gráfico realizado en la parte de arriba, sin embargo lo que aún no está claro es cómo el granjero logró resolver el problema, por tanto a continuación se describe detalladamente la solución.</p>\n\n<p>El primer paso es llevar la cabra a través del río, evitando que  la cabra o la col sean devoradas. Cuando el granjero vuelve a la orilla de partida, debe elegir entre llevar la col o al lobo. Si lleva al lobo, debe volver  para llevar la col, entonces el lobo se comería a la cabra. Si lleva la col al otro lado, debe volver para llevar al lobo, entonces la col sería comida. He aquí el problema, el cuál se resuelve con los siguientes <strong>7</strong> pasos:</p>\n\n<p><strong>1.</strong> <em>Deja a la cabra al otro lado</em><br>\n<strong>2.</strong> <em>Regresa al punto de partida (sólo el granjero)</em><br>\n<strong>3.</strong> <em>Deja al lobo al otro lado</em><br>\n<strong>4.</strong> <em>Regresa con la cabra</em><br>\n<strong>5.</strong> <em>Deja la col al otro lado</em><br>\n<strong>6.</strong> <em>Regresa al punto de partida (sólo el granjero)</em><br>\n<strong>7.</strong> <em>Deja la cabra al otro lado</em></p>\n\n<p>Se realizan cuatro viajes hacia la derecha y tres hacia la izquierda.</p>\n\n<p>Cabe mencionar que esta no es la única solución, dado que existe una segunda alternativa, por ejemplo, en el tercer paso se puede dejar la col al otro lado y regresar con la cabra, luego dejar al lobo al otro lado y regresar solo, y finalmente regresar por la cabra.</p>\n\n<p>Una vez claro el dilema, es momento de implementar dicha solución en <strong>Prolog</strong>.</p>\n<h3>\n  <a name=\"soluci%C3%B3n-en-prolog\" href=\"#soluci%C3%B3n-en-prolog\" class=\"anchor\">\n  </a>\n  Solución en Prolog\n</h3>\n\n<p>Para empezar con el código, antes es necesario definir las variables con las que se va a trabajar.</p>\n\n<p><strong>I=</strong> Izquierda, <strong>D=</strong> Derecha<br>\n<strong>GR=</strong> Granjero, <strong>CB=</strong> Cabra<br>\n<strong>LB</strong>= Lobo,     <strong>CL</strong>= Col   </p>\n\n<p>Definido las variables, se parte de <strong>tres hechos</strong>, el <strong>primero</strong> es que el estado deseado final del <strong>granjero</strong>, la <strong>cabra</strong>, el <strong>lobo</strong> y la <strong>col</strong> terminen en la orilla izquierda asumiendo que todos parten del lado derecho , para lo cual en Prolog se representa de la siguiete manera:<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">meta</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">)).</span>\n</code></pre></div>\n\n\n\n<p>La notación anterior indica que el estado final (<strong>meta</strong>) es que los cuatro actores de este acertijo terminen en la orilla izquierda, sin importar la posición inicial. La estructura <strong>estado</strong> recibe 4 argumentos que representan la posición en la que se encuentran cada uno de los actores del problema en el siguiente orden; en el primer argumento el granjero, en el segudo la cabra, el tercero el lobo y en el cuarto la col.</p>\n\n<p><strong>Nota 1:</strong> Es importante mencionar que para hacer uso del predicado <strong>estado</strong>  se respetará  el orden mencionado anteriormente (<em>estado(GR, CB, LB, CL)</em>).</p>\n\n<p>El <strong>segundo y tercer</strong> hecho son la dirección de los movimientos que pueden realizar, en este caso solo hay dos posibilidades desde la <strong>derecha</strong> hacia la <strong>izquierda</strong> o vicerversa, por tanto definiré mi predicado con el nombre de <strong><em>\"direccion\"</em></strong> como se muestra a continuación.<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">).</span>\n<span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<p>Los hechos anteriores describen la siguiente relación, la dirección en la que puede moverse es desde la izquierda hacia la derecha y desde la derecha hacia la izquierda.<br>\nA continuación se definen varias reglas dado que un hecho puede depender de la verdad de otro hecho o conjunto de hechos, esto es que se va a definir los predicados para los posibles movimientos que puede hacer el granjero.</p>\n\n<p><strong>1.-</strong> Un movimiento a realizar es que el granjero cruce el río solo, en cualquier dirección,  lo que en prolog se traduce en la siguiente regla:<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">movimiento</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<p>La regla anterior menciona que  el granjero se mueve de una orilla hacia la otra, si éste se mueve de deracha a izquierda o viceversa (<strong>direccion(M, M1).</strong>), además se puede apreciar claramente que los argumentos del <strong>\"movimiento\"</strong> son 2 estados, el primer estado que toma es <strong>estado(M, CB, LB, CL)</strong>, que quiere decir que en el punto origen se encuentran el Granjero (<strong>M</strong>), la cabra (<strong>CB</strong>),  el lobo (<strong>LB</strong>) y la col (<strong>CL</strong>); el segundo argumento es el estado en el punto destino <strong>estado(M1, CB, LB, CL)</strong>; en donde el argumento del estado <strong>M1</strong>, indica que cambia solo el estado del granjero (sé que cambia el estado del granjero ya que el primer argumento del estado es utilizado para él, por ejemplo si quisiera que además cambie de estado la cabra, también debería cambiar el segundo argumento que toma el estado a <strong>M y M1</strong>, <strong><em>ver nota 1</em></strong>).</p>\n\n<p><strong>Nota 2:</strong> En el primer y segundo predicado en la posición del granjero, <strong>\"estado\"</strong> toma en el primero argumento el valor <strong>M y M1</strong> respectivamente, ya que este me indetificará la dirección del movimiento a realizar. El cuerpo de la regla (<strong>direccion(M, M1)</strong>) indica que el movimiento se realiza si cumple la dirección indicada, es decir, si se mueve de derecha hacia la izquierda o lo contrario; por eso se indica en el argumento de dirección, que cambia <strong>M a M1</strong> (los nombre de variables M y M1, pueden tomar cualquier otro nombre).</p>\n\n<p><strong>2.-</strong> El siguiente movimiento que puede hacer el granjero, es cruzar el río con el lobo, de nuevo en cualquier dirección:<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">movimiento</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<p>La regla anterior describe que el granjero y el lobo cruzan el río en una dirección determinada, por eso el cambio de nombre de variabe de <strong>GR y LB</strong> a <strong>M y M1</strong>; el análisis de la regla es similar al punto anterior. </p>\n\n<p><strong>3.-</strong> Un tercer movimiento del granjero es que cruce el río con la cabra.<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">movimiento</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<p><strong>4.-</strong> El último movimiento que puede hacer el granjero es cruzar el río con la col.<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">movimiento</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">M</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<p>Bien, hasta este punto le hemos dicho a Prolog los movimientos que puede realizar el granjero, sin embargo hace falta especificar los movimiento que no debe hacer el granjero para cruzar el río con todas sus compras a salvo.</p>\n\n<p><strong>5.-</strong> Un estado prohibido una vez realizado el movimiento es que el granjero no puede estar al lado contrario del lobo y la cabra.<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">prohibido</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">_</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<p>He creado un predicado denominado <strong>\"prohibido\"</strong>, que recibe como argumento un <strong>\"estado\"</strong>, para especificar que el el granjero esta al otro lado de la orilla de donde están el lobo y la cabra, he pasado en el primer argumento del estado, la posición <strong>M</strong> del granjero, y en el segundo y tercer argumento la misma posición <strong>M1</strong> del lobo y la cabra, el símbolo <strong>\"_\"</strong>, es una variable anónima que significa en este caso que no me interesa la posición en la que se encuentre la col, el cuerpo de la regla (<strong>direccion(M, M1)</strong>),indica la dirección en la que están.</p>\n\n<p><strong>6.-</strong> Otro estado prohibido es que la cabra y la col esten al otro lado del granjero.<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">prohibido</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">_</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<h3>\n  <a name=\"lista-de-estados\" href=\"#lista-de-estados\" class=\"anchor\">\n  </a>\n  Lista de estados\n</h3>\n\n<p>La solución al acertijo es una lista de estados (los que fueron analizados anteriormente) y es conveniente determinar que no existan estados repetidos, por tanto hay que verificar si un elemento pertenece a una lista, en Prolog se define de la siguiente manera:<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">miembro</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nv\">X</span><span class=\"p\">|</span><span class=\"nv\">_</span><span class=\"p\">]).</span>\n<span class=\"ss\">miembro</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nv\">_</span><span class=\"p\">|</span><span class=\"nv\">L</span><span class=\"p\">]):-</span> <span class=\"ss\">miembro</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">L</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<h3>\n  <a name=\"soluci%C3%B3n\" href=\"#soluci%C3%B3n\" class=\"anchor\">\n  </a>\n  Solución\n</h3>\n\n<p>A continuación, se define la solución a este acertijo:</p>\n\n<p><strong>E =</strong> cabeza de la lista    <strong>L =</strong> cola de la lista<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">solucion</span><span class=\"p\">([</span><span class=\"nv\">E</span> <span class=\"p\">|</span> <span class=\"nv\">L</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"nv\">E</span> <span class=\"p\">|</span> <span class=\"nv\">L</span><span class=\"p\">])</span> <span class=\"p\">:-</span> <span class=\"ss\">meta</span><span class=\"p\">(</span><span class=\"nv\">E</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<p>Esta regla anterior permite determinar la solución base (definida con el mismo nombre sin acento) recibe 2 listas como parámetros, que deben ser iguales para ser la solución (<strong>[E | L], [E | L]</strong>), mismas que se dividen en cabeza y cola (<strong>[E | L]</strong>). La meta recibe la cabeza de la lista el cual es un estado que anteriormente ya se definió para que sea solución meta(<strong>estado(izq, izq, izq, izq)</strong>), en el caso que no sea la solución base se define la siguiente regla:<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">solucion</span><span class=\"p\">([</span><span class=\"nv\">E</span> <span class=\"p\">|</span> <span class=\"nv\">L</span><span class=\"p\">],</span> <span class=\"nv\">LS</span><span class=\"p\">):-</span> <span class=\"ss\">movimiento</span><span class=\"p\">(</span><span class=\"nv\">E</span><span class=\"p\">,</span> <span class=\"nv\">EP</span><span class=\"p\">),</span> <span class=\"ss\">not</span><span class=\"p\">(</span><span class=\"ss\">prohibido</span><span class=\"p\">(</span><span class=\"nv\">EP</span><span class=\"p\">)),</span> <span class=\"ss\">not</span><span class=\"p\">(</span><span class=\"ss\">miembro</span><span class=\"p\">(</span><span class=\"nv\">EP</span><span class=\"p\">,</span> <span class=\"nv\">L</span><span class=\"p\">)),</span> <span class=\"ss\">solucion</span><span class=\"p\">([</span><span class=\"nv\">EP</span><span class=\"p\">,</span> <span class=\"nv\">E</span> <span class=\"p\">|</span> <span class=\"nv\">L</span><span class=\"p\">],</span> <span class=\"nv\">LS</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<p>Esta regla permite añadir a la lista de soluciones un nuevo estado (<strong>EP</strong>) si cumple las siguientes condiciones:</p>\n\n<ul>\n<li>Es un movimiento permitido (<strong>movimiento(E, EP)</strong>)</li>\n<li>No es un estado prohibido (<strong>not(prohibido(EP))</strong>)</li>\n<li>No se encuentra un estado igual en la lista de solucioines (<strong>not(miembro(EP, L))</strong>)</li>\n</ul>\n\n<p><strong>Nota 3:</strong> La variable <strong>LS</strong>, almacena el resultado, es decir la lista de estados que permiten llegar a la solución, el cual prolog mostrará como salida.</p>\n\n<p>Si cumple con las condiciones anteriores, el nuevo estado posible es añadida a la lista de soluciones (<strong>[EP, E | L]</strong>), esto se repite recursivamente hasta encontrar el caso base (<strong>solucion([EP, E | L], LS)</strong>), y listo!.</p>\n\n<p>Para ejecutar el programa en Prolog,  se lo hace de la siguiente manera:<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">solucion</span><span class=\"p\">([</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">)],</span> <span class=\"nv\">L</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<p>La solución recibe una lista de estados, en este caso he puesto solo un elemento en la lista (<strong>estado(der, der, der, der)</strong>), y en este estado todos los actores del problema están en la parte derecha de la orilla del río, en la variable <strong>L</strong> se almacenara la lista de estados. Al ejecutar en prolog me muestra dos soluciones que son las siguientes:<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"nv\">L</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">)]</span>\n<span class=\"nv\">L</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">)]</span>\n</code></pre></div>\n\n\n\n<p>A continuación se muestra todo el código:<br>\n</p>\n\n<div class=\"highlight\"><pre class=\"highlight prolog\"><code><span class=\"ss\">meta</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">)).</span>\n<span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"ss\">izq</span><span class=\"p\">,</span> <span class=\"ss\">der</span><span class=\"p\">).</span>\n<span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"ss\">der</span><span class=\"p\">,</span> <span class=\"ss\">izq</span><span class=\"p\">).</span>\n\n<span class=\"cm\">/*</span><span class=\"err\">  Movimientos permitidos </span><span class=\"cm\">*/</span>\n<span class=\"ss\">movimiento</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n<span class=\"ss\">movimiento</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n<span class=\"ss\">movimiento</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">CL</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n<span class=\"ss\">movimiento</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">M</span><span class=\"p\">),</span> <span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">CB</span><span class=\"p\">,</span> <span class=\"nv\">LB</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n\n<span class=\"cm\">/*</span><span class=\"err\">  Movimientos prohibidos </span><span class=\"cm\">*/</span>\n<span class=\"ss\">prohibido</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">_</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n<span class=\"ss\">prohibido</span><span class=\"p\">(</span><span class=\"ss\">estado</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">,</span> <span class=\"nv\">_</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">)):-</span> <span class=\"ss\">direccion</span><span class=\"p\">(</span><span class=\"nv\">M</span><span class=\"p\">,</span> <span class=\"nv\">M1</span><span class=\"p\">).</span>\n\n<span class=\"cm\">/*</span><span class=\"err\">  Verifica si un elemento pertenece a una lista </span><span class=\"cm\">*/</span>\n<span class=\"ss\">miembro</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nv\">X</span><span class=\"p\">|</span><span class=\"nv\">_</span><span class=\"p\">]).</span>\n<span class=\"ss\">miembro</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nv\">_</span><span class=\"p\">|</span><span class=\"nv\">L</span><span class=\"p\">]):-</span> <span class=\"ss\">miembro</span><span class=\"p\">(</span><span class=\"nv\">X</span><span class=\"p\">,</span> <span class=\"nv\">L</span><span class=\"p\">).</span>\n\n<span class=\"cm\">/*</span><span class=\"err\">  Solución </span><span class=\"cm\">*/</span> \n<span class=\"ss\">solucion</span><span class=\"p\">([</span><span class=\"nv\">E</span> <span class=\"p\">|</span> <span class=\"nv\">L</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"nv\">E</span> <span class=\"p\">|</span> <span class=\"nv\">L</span><span class=\"p\">])</span> <span class=\"p\">:-</span> <span class=\"ss\">meta</span><span class=\"p\">(</span><span class=\"nv\">E</span><span class=\"p\">).</span>\n<span class=\"ss\">solucion</span><span class=\"p\">([</span><span class=\"nv\">E</span> <span class=\"p\">|</span> <span class=\"nv\">L</span><span class=\"p\">],</span> <span class=\"nv\">LS</span><span class=\"p\">):-</span> <span class=\"ss\">movimiento</span><span class=\"p\">(</span><span class=\"nv\">E</span><span class=\"p\">,</span> <span class=\"nv\">EP</span><span class=\"p\">),</span> <span class=\"ss\">not</span><span class=\"p\">(</span><span class=\"ss\">prohibido</span><span class=\"p\">(</span><span class=\"nv\">EP</span><span class=\"p\">)),</span> <span class=\"ss\">not</span><span class=\"p\">(</span><span class=\"ss\">miembro</span><span class=\"p\">(</span><span class=\"nv\">EP</span><span class=\"p\">,</span> <span class=\"nv\">L</span><span class=\"p\">)),</span> <span class=\"ss\">solucion</span><span class=\"p\">([</span><span class=\"nv\">EP</span><span class=\"p\">,</span> <span class=\"nv\">E</span> <span class=\"p\">|</span> <span class=\"nv\">L</span><span class=\"p\">],</span> <span class=\"nv\">LS</span><span class=\"p\">).</span>\n</code></pre></div>\n\n\n\n<p>También pueden encontrar el mismo código en <a href=\"https://github.com/foqc/WolfGoatCabbageRiddle\">GitHub</a>.</p>\n\n<p>Con esto concluimos, en casos de dudas pueden contactarme a <strong><a href=\"mailto:fabianq44@gmail.com\">fabianq44@gmail.com</a></strong>.</p>\n\n<p><em>¡Gracias por su lectura!</em></p>\n\n","url":"https://dev.to/foqc/prolog-acertijo-del-granjero-la-cabra-el-lobo-y-la-col-4bd1"}}},"pageContext":{"id":"prolog-acertijo-del-granjero-la-cabra-el-lobo-y-la-col-4bd1"}}}